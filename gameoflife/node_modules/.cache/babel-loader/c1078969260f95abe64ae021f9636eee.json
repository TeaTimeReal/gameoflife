{"ast":null,"code":"var _jsxFileName = \"/home/rootuser/Desktop/GameOfLife/gameoflife/src/App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport { CellComp } from './CellComp.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gridArray: [[\"1\", \"2\", \"5\"], [\"3\", \"4\", \"6\"], [\"3\", \"4\", \"6\"], [\"3\", \"4\", \"6\"]],\n      gridXLength: 0,\n      gridYLength: 0\n    };\n  }\n\n  determineArrayDimensions() {\n    let yLengthTMP = this.state.gridArray.length;\n    let xLengthTMP = this.state.gridArray.reduce((x, y) => Math.max(x, y.length), 0);\n    this.setState({\n      gridXLength: xLengthTMP\n    });\n    this.setState({\n      gridYLength: yLengthTMP\n    });\n  }\n\n  componentDidMount() {\n    this.determineArrayDimensions();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"GridDiv\",\n          children: /*#__PURE__*/_jsxDEV(CellComp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rootuser/Desktop/GameOfLife/gameoflife/src/App.js"],"names":["Component","CellComp","App","constructor","props","state","gridArray","gridXLength","gridYLength","determineArrayDimensions","yLengthTMP","length","xLengthTMP","reduce","x","y","Math","max","setState","componentDidMount","render"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,eAAzB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAC,CAAE,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ,CAAF,EAAoB,CAAE,GAAF,EAAO,GAAP,EAAa,GAAb,CAApB,EAAuC,CAAE,GAAF,EAAO,GAAP,EAAa,GAAb,CAAvC,EAA0D,CAAE,GAAF,EAAO,GAAP,EAAa,GAAb,CAA1D,CADC;AAEXC,MAAAA,WAAW,EAAE,CAFF;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAMD;;AAEDC,EAAAA,wBAAwB,GAAE;AACxB,QAAIC,UAAU,GAAG,KAAKL,KAAL,CAAWC,SAAX,CAAqBK,MAAtC;AACA,QAAIC,UAAU,GAAG,KAAKP,KAAL,CAAWC,SAAX,CAAqBO,MAArB,CAA4B,CAACC,CAAD,EAAIC,CAAJ,KAAUC,IAAI,CAACC,GAAL,CAASH,CAAT,EAAYC,CAAC,CAACJ,MAAd,CAAtC,EAA6D,CAA7D,CAAjB;AAEA,SAAKO,QAAL,CAAc;AAACX,MAAAA,WAAW,EAAEK;AAAd,KAAd;AACA,SAAKM,QAAL,CAAc;AAACV,MAAAA,WAAW,EAAEE;AAAd,KAAd;AACD;;AAEDS,EAAAA,iBAAiB,GAAE;AACjB,SAAKV,wBAAL;AACD;;AAEDW,EAAAA,MAAM,GAAE;AACN,wBAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAcD;;AAtCyB;;AA0C5B,eAAelB,GAAf","sourcesContent":["import './App.css';\nimport { Component } from 'react';\nimport { CellComp } from './CellComp.js';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      gridArray:[ [ \"1\", \"2\", \"5\"], [ \"3\", \"4\" , \"6\"], [ \"3\", \"4\" , \"6\"], [ \"3\", \"4\" , \"6\"] ],\n      gridXLength: 0,\n      gridYLength: 0,\n\n    }\n  }\n\n  determineArrayDimensions(){\n    let yLengthTMP = this.state.gridArray.length;\n    let xLengthTMP = this.state.gridArray.reduce((x, y) => Math.max(x, y.length), 0);\n\n    this.setState({gridXLength: xLengthTMP});\n    this.setState({gridYLength: yLengthTMP});\n  }\n  \n  componentDidMount(){\n    this.determineArrayDimensions();\n  }\n\n  render(){\n    return (\n      \n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n  \n        <body>\n            <div className=\"GridDiv\">\n            <CellComp/>\n            </div>\n\n        </body>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}