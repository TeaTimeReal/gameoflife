{"ast":null,"code":"var _jsxFileName = \"/home/rootuser/Desktop/GameOfLife/gameoflife/src/App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport Rows from './Rows.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //gridArray:[ [ \"1\", \"2\", \"3\"], [ \"4\", \"5\" , \"6\"], [ \"6\", \"7\" , \"8\"] ],\n      //gridArray:[ [ true, false, false], [ false, true , false], [ true, false , true] , [ false, false , false]],\n      gridArray: [],\n      gridArrayID: [],\n      gridXLength: 0,\n      gridYLength: 0\n    };\n  }\n\n  onCellClick() {\n    console.log(\"onCellClick Event\");\n  }\n\n  determineArrayDimensions() {\n    let yLengthTMP = this.state.gridArray.length;\n    let xLengthTMP = this.state.gridArray.reduce((x, y) => Math.max(x, y.length), 0);\n    this.setState({\n      gridXLength: xLengthTMP\n    });\n    this.setState({\n      gridYLength: yLengthTMP\n    });\n  }\n\n  fillGrid() {\n    let gridTMP = this.state.gridArray;\n    let gridTMPID = this.state.gridArrayID;\n    let index1; // Fill Grid with false.\n\n    for (index1 = 0; index1 < 10; index1++) {\n      let index2;\n      let row = [];\n\n      for (index2 = 0; index2 < 10; index2++) {\n        row.push(false);\n      }\n\n      gridTMP.push(row);\n    } // Fill ID Grid with IDs.\n\n\n    var index3 = 0;\n\n    for (index1 = 0; index1 < 10; index1++) {\n      let index2;\n      let row = [];\n\n      for (index2 = 0; index2 < 10; index2++) {\n        row.push(index3);\n        index3++;\n      }\n\n      gridTMPID.push(row);\n    }\n\n    this.setState({\n      gridArray: gridTMP\n    });\n    this.setState({\n      gridArrayID: gridTMPID\n    });\n  }\n\n  componentDidMount() {\n    this.fillGrid();\n    this.determineArrayDimensions();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"GridDiv\",\n          children: this.state.gridArray.map(Element => /*#__PURE__*/_jsxDEV(Rows, {\n            value: Element,\n            onCellClick: this.onCellClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 53\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; //              { this.state.gridArray.map(Element => Element.map(Element2 => <CellComp value={Element2}/>)) }","map":{"version":3,"sources":["/home/rootuser/Desktop/GameOfLife/gameoflife/src/App.js"],"names":["Component","Rows","App","constructor","props","state","gridArray","gridArrayID","gridXLength","gridYLength","onCellClick","console","log","determineArrayDimensions","yLengthTMP","length","xLengthTMP","reduce","x","y","Math","max","setState","fillGrid","gridTMP","gridTMPID","index1","index2","row","push","index3","componentDidMount","render","map","Element"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Component } from 'react';\nimport Rows from './Rows.js';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      //gridArray:[ [ \"1\", \"2\", \"3\"], [ \"4\", \"5\" , \"6\"], [ \"6\", \"7\" , \"8\"] ],\n      //gridArray:[ [ true, false, false], [ false, true , false], [ true, false , true] , [ false, false , false]],\n      gridArray: [],\n      gridArrayID: [],\n\n      gridXLength: 0,\n      gridYLength: 0,\n\n    }\n  }\n\n  onCellClick(){\n    console.log(\"onCellClick Event\");\n  }\n\n\n  determineArrayDimensions(){\n    let yLengthTMP = this.state.gridArray.length;\n    let xLengthTMP = this.state.gridArray.reduce((x, y) => Math.max(x, y.length), 0);\n\n    this.setState({gridXLength: xLengthTMP});\n    this.setState({gridYLength: yLengthTMP});\n  }\n  \n  fillGrid(){\n    let gridTMP = this.state.gridArray;\n    let gridTMPID = this.state.gridArrayID;\n\n    let index1;\n\n    // Fill Grid with false.\n    for (index1 = 0; index1 < 10; index1++){\n      let index2;\n      let row = [];\n      for (index2 = 0; index2 < 10; index2++){\n        row.push(false);\n      }\n      gridTMP.push(row)\n    }\n    \n    // Fill ID Grid with IDs.\n    var index3 = 0;\n    for (index1 = 0; index1 < 10; index1++){\n      let index2;\n      let row = [];\n      for (index2 = 0; index2 < 10; index2++){\n\n        row.push(index3);\n        index3++;\n      }\n      gridTMPID.push(row)\n    }\n\n\n\n    this.setState({ gridArray: gridTMP});\n    this.setState({ gridArrayID: gridTMPID});\n\n  }\n\n  componentDidMount(){\n    this.fillGrid(); \n    this.determineArrayDimensions();\n  }\n\n  render(){\n    return (\n      \n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n  \n        <body>\n\n            <div className=\"GridDiv\">\n              { this.state.gridArray.map(Element => <Rows value={Element} onCellClick={this.onCellClick}/>) }\n            </div>\n\n        </body>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n//              { this.state.gridArray.map(Element => Element.map(Element2 => <CellComp value={Element2}/>)) }\n"]},"metadata":{},"sourceType":"module"}